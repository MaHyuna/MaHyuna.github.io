{"version":3,"sources":["webpack:///./src/templates/post-list.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"2QA0EaA,EAAS,YAyCPC,UA1GE,SAACC,GACd,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAASL,EAAME,KAAKI,KAAKC,aAAaF,OAFpB,EAGUL,EAAMQ,YAAhCC,EAHgB,EAGhBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALS,EAGHG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAenC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKE,MAAM,OAAOC,SAAU,CAAC,SAAD,2DAC5B,6BAASC,UAAU,uBACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QACXjB,EAAMkB,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,wBAAIG,IAAKJ,EAAKE,KAAKG,IACjB,kBAAC,OAAD,CAAMP,UAAU,OAAOQ,GAAIN,EAAKE,KAAKK,OAAOC,MAC1C,uBAAGV,UAAU,QACVE,EAAKE,KAAKC,YAAYM,MAEzB,wBAAIX,UAAU,SAASE,EAAKE,KAAKC,YAAYP,OAC7C,uBAAGE,UAAU,QAAQE,EAAKE,KAAKQ,UAIjC,yBAAKZ,UAAU,QAhCf,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACf7B,EAAO2B,SAAQ,SAACG,GACRF,IAAQE,EAAMF,KACdF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHT,EAwBYU,CAAYpB,UAMrBX,GACE,kBAAC,OAAD,CAAMgB,GAAIb,EAAU6B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,aAAhB,qBAGNP,GACE,kBAAC,OAAD,CAAMe,GAAIX,EAAU2B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,kBAAhB,iBAIV,kBAAC,IAAD","file":"component---src-templates-post-list-js-65419bf94900a0a7457a.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"../css/css.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst PostList = (props) => {\r\n    const posts = props.data.allMarkdownRemark.edges\r\n    const labels = props.data.site.siteMetadata.labels\r\n    const { currentPage, numPages } = props.pageContext\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\r\n    const nextPage = (currentPage + 1).toString()\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n            <section className=\"contain-in clearfix\">\r\n              <div className=\"list-wrap\">\r\n                <ul className=\"list\">\r\n                  {posts.map((post) => {\r\n                    const tags = post.node.frontmatter.tags\r\n                    return (\r\n                      <li key={post.node.id}>\r\n                        <Link className=\"link\" to={post.node.fields.slug}>\r\n                          <p className=\"date\">\r\n                            {post.node.frontmatter.date}\r\n                          </p>\r\n                          <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                          <p className=\"text\">{post.node.excerpt}</p>\r\n                        </Link>\r\n\r\n                          \r\n                        <div className=\"tags\">\r\n                          {getTechTags(tags)}\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n                {!isFirst && (\r\n                    <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\r\n                        <span className=\"text-dark\">← Previous Page</span>\r\n                    </Link>\r\n                )}\r\n                {!isLast && (\r\n                    <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\r\n                        <span className=\"text-dark ml-5\">Next Page →</span>\r\n                    </Link>\r\n                )}\r\n              </div>\r\n              <Sidebar />\r\n            </section>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const listQuery = graphql`\r\n         query paginateQuery($skip: Int!, $limit: Int!) {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: $limit\r\n             skip: $skip\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default PostList\r\n"],"sourceRoot":""}