{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["pageQuery","Tag","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","console","log","tag","tagCount","totalCount","tagHeader","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","i","label","push","tech","name","size","color","getTechTags"],"mappings":"uPAyFaA,EAAS,aAwCPC,UAvHH,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClBC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OACtCG,QAAQC,IAAIT,EAAYU,KAHW,IAI3BA,EAAQV,EAARU,IAOFC,EAAQ,GANSV,EAAKE,kBAApBS,WAOFC,EAAS,GAAMH,EAcrB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKI,MAAM,OAAOC,SAAU,CAAC,SAAD,8DACxB,6BAASC,UAAU,uBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WAAU,gCAASH,GAAlC,QAA0D,gCAASF,GAAnE,gBACA,wBAAIK,UAAU,QACTd,EAAMe,KAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,wBAAIG,IAAKJ,EAAKE,KAAKG,IACf,kBAAC,OAAD,CAAMP,UAAU,OAAOQ,GAAIN,EAAKE,KAAKK,OAAOC,MACxC,uBAAGV,UAAU,QACRE,EAAKE,KAAKC,YAAYM,MAE3B,wBAAIX,UAAU,SAASE,EAAKE,KAAKC,YAAYP,OAC7C,uBAAGE,UAAU,QAAQE,EAAKE,KAAKQ,UAGnC,yBAAKZ,UAAU,QA/B/B,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACpB,EAAKqB,GACf1B,EAAOyB,SAAQ,SAACE,GACRtB,IAAQsB,EAAMtB,KACdmB,EAASI,KAAK,kBAAC,IAAD,CAASX,IAAKS,EAAGrB,IAAKsB,EAAMtB,IAAKwB,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHR,EAuB8BS,CAAYnB,UAOrC,kBAAC,IAAD","file":"component---src-templates-tag-js-0858cdecc2e2d841576d.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"../css/css.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\n\r\nconst Tag = ({ pageContext, data }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n    console.log(pageContext.tag)\r\n    const { tag } = pageContext\r\n    const { totalCount } = data.allMarkdownRemark\r\n    /*\r\n    const tagHeader = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"\r\n        } tagged with \"${tag}\"`\r\n    */\r\n    const tagCount = `${totalCount}`\r\n    const tagHeader = `${tag}`\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]} />\r\n                <section className=\"contain-in clearfix\">\r\n                    <div className=\"list-wrap\">\r\n                        <div className=\"heading\"><strong>{tagHeader}</strong>에 대한 <strong>{tagCount}</strong>개의 글을 찾았습니다.</div>\r\n                        <ul className=\"list\">\r\n                            {posts.map((post) => {\r\n                                const tags = post.node.frontmatter.tags\r\n                                return (\r\n                                    <li key={post.node.id}>\r\n                                        <Link className=\"link\" to={post.node.fields.slug}>\r\n                                            <p className=\"date\">\r\n                                                {post.node.frontmatter.date}\r\n                                            </p>\r\n                                            <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                                            <p className=\"text\">{post.node.excerpt}</p>\r\n                                        </Link>\r\n                                        \r\n                                        <div className=\"tags\">\r\n                                            {getTechTags(tags)}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <Sidebar />\r\n                </section>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag: PropTypes.string.isRequired,\r\n    }),\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            totalCount: PropTypes.number.isRequired,\r\n            edges: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node: PropTypes.shape({\r\n                        frontmatter: PropTypes.shape({\r\n                            title: PropTypes.string.isRequired,\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n        siteMetadata {\r\n            title \r\n            author\r\n            labels {\r\n                tag\r\n                tech \r\n                name \r\n                size \r\n                color\r\n            } \r\n        }\r\n    } \r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n         node {\r\n            excerpt(pruneLength: 200)\r\n            html\r\n            id\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"MMMM, YYYY\")\r\n                tags\r\n            }\r\n             fields {\r\n                slug\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tag"],"sourceRoot":""}