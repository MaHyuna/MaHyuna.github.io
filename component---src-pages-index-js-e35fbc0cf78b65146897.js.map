{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pageQuery","IndexPage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","toString","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags"],"mappings":"2QA6DaA,EAAS,aAwCPC,UA5FG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAErB,GAAkBG,WAenC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,SAAD,2DAC5B,6BAASC,UAAU,uBACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QACXT,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,wBAAIG,IAAKJ,EAAKE,KAAKG,IACjB,kBAAC,OAAD,CAAMP,UAAU,OAAOQ,GAAIN,EAAKE,KAAKK,OAAOC,MAC1C,uBAAGV,UAAU,QACVE,EAAKE,KAAKC,YAAYM,MAEzB,wBAAIX,UAAU,SAASE,EAAKE,KAAKC,YAAYP,OAC7C,uBAAGE,UAAU,QAAQE,EAAKE,KAAKQ,UAIjC,yBAAKZ,UAAU,QAhCX,SAACG,GACnB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBtB,EAAOoB,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIjHT,EAwBUU,CAAYpB,UAOzB,kBAAC,IAAD","file":"component---src-pages-index-js-e35fbc0cf78b65146897.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"../css/css.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  const labels = data.site.siteMetadata.labels\r\n  const currentPage = 1\r\n  const nextPage = (currentPage + 1).toString()\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n      <section className=\"contain-in clearfix\">\r\n        <div className=\"list-wrap\">\r\n          <ul className=\"list\">\r\n            {posts.map((post) => {\r\n              const tags = post.node.frontmatter.tags\r\n              return (\r\n                <li key={post.node.id}>\r\n                  <Link className=\"link\" to={post.node.fields.slug}>\r\n                    <p className=\"date\">\r\n                      {post.node.frontmatter.date}\r\n                    </p>\r\n                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                    <p className=\"text\">{post.node.excerpt}</p>\r\n                  </Link>\r\n\r\n                    \r\n                  <div className=\"tags\">\r\n                    {getTechTags(tags)}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <Sidebar />\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query IndexQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 5\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default IndexPage\r\n\r\n"],"sourceRoot":""}