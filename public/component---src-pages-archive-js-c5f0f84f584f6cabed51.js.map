{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["pageQuery","ArchivePage","data","posts","tagline","allMarkdownRemark","edges","labels","site","siteMetadata","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags"],"mappings":"uPA2DaA,EAAS,WAwCPC,UA1FK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KACbC,GADiC,EAAdC,QACXF,EAAKG,kBAAkBC,OAC/BC,EAASL,EAAKM,KAAKC,aAAaF,OAetC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MAAM,UAAUC,SAAU,CAAC,SAAD,2DAC/B,6BAASC,UAAU,uBACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QACXT,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,wBAAIG,IAAKJ,EAAKE,KAAKG,IACjB,kBAAC,OAAD,CAAMP,UAAU,OAAOQ,GAAIN,EAAKE,KAAKK,OAAOC,MAC1C,uBAAGV,UAAU,QACVE,EAAKE,KAAKC,YAAYM,MAEzB,wBAAIX,UAAU,SAASE,EAAKE,KAAKC,YAAYP,OAC7C,uBAAGE,UAAU,QAAQE,EAAKE,KAAKQ,UAIjC,yBAAKZ,UAAU,QAhCf,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACfrB,EAAOmB,SAAQ,SAACG,GACRF,IAAQE,EAAMF,KACdF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHT,EAwBYU,CAAYpB,UAOzB,kBAAC,IAAD","file":"component---src-pages-archive-js-c5f0f84f584f6cabed51.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"../css/css.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\n\r\nconst ArchivePage = ({ data, tagline }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n            <section className=\"contain-in clearfix\">\r\n              <div className=\"list-wrap\">\r\n                <ul className=\"list\">\r\n                  {posts.map((post) => {\r\n                    const tags = post.node.frontmatter.tags\r\n                    return (\r\n                      <li key={post.node.id}>\r\n                        <Link className=\"link\" to={post.node.fields.slug}>\r\n                          <p className=\"date\">\r\n                            {post.node.frontmatter.date}\r\n                          </p>\r\n                          <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                          <p className=\"text\">{post.node.excerpt}</p>\r\n                        </Link>\r\n\r\n                          \r\n                        <div className=\"tags\">\r\n                          {getTechTags(tags)}\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <Sidebar />\r\n            </section>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query ArchiveQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 1000\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default ArchivePage\r\n\r\n"],"sourceRoot":""}